services:
  frontend:
    build: ./frontend
    ports:
      - 3000:3000
    volumes:
      - ./frontend/src/:/app/src/
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail --request GET --url 'http://frontend:3000' || exit 1",
        ]
      interval: 10s
      retries: 5
      start_period: 20s
    depends_on:
      backend:
        condition: service_healthy

  backend:
    build: ./backend
    ports:
      - 3310:3310
    volumes:
      - ./backend/src/:/app/src/
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'curl --fail --request POST --header ''Content-Type: application/json'' --url ''http://backend:3310'' --data ''{"query":"query { __typename }"}'' || exit 1',
        ]
      interval: 10s
      retries: 5
      start_period: 20s
    environment:
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      DB_USER: ${DB_USER}
      DB_HOST: ${DB_HOST}
      # JWT_SECRET: ${JWT_SECRET}

  database:
    image: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${DB_DATABASE} -U ${DB_USER}"]
      interval: 10s
      retries: 5
      start_period: 20s
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USER}
      #POSTGRES_HOST: ${DB_HOST} (pas nécessaire, postgres utilise par défaut localhost)
    ports:
      - 5432:5432
    volumes:
      - ./persist/database:/var/lib/postgresql/data

  # gateway:
  #   image: nginx
  #   volumes:
  #     - ./nginx.dev.conf:/etc/nginx/nginx.conf
  #   ports:
  #     - ${GATEWAY_PORT}:80
  #   depends_on:
  #     backend:
  #       condition: service_healthy
  #     frontend:
  #       condition: service_healthy

  # adminer:
  #   image: adminer
  #   depends_on:
  #     database:
  #       condition: service_healthy