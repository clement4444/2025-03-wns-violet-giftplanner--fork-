services:
  frontend:
    container_name: frontend-dev
    restart: always
    build: ./frontend
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    volumes:
      - ./frontend/src/:/app/src/
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail --request GET --url 'http://localhost:${FRONTEND_PORT}' || exit 1" ]
      interval: 10s
      retries: 5
      start_period: 20s
    depends_on:
      backend:
        condition: service_healthy

  backend:
    container_name: backend-dev
    restart: always
    build: ./backend
    ports:
      - ${SERVEUR_PORT}:${SERVEUR_PORT}
    volumes:
      - ./backend/src/:/app/src/
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", 'curl --fail --request POST --header ''Content-Type: application/json'' --url ''http://localhost:${SERVEUR_PORT}'' --data ''{"query":"query { __typename }"}'' || exit 1' ]
      interval: 10s
      retries: 5
      start_period: 20s
    environment:
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      DB_USER: ${DB_USER}
      DB_HOST: ${DB_HOST}
      JWT_SECRET: ${JWT_SECRET}
      SERVEUR_PORT: ${SERVEUR_PORT}

  database:
    container_name: database-dev
    image: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${DB_DATABASE} -U ${DB_USER}" ]
      interval: 10s
      retries: 5
      start_period: 20s
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_HOST: ${DB_HOST}
    ports:
      - 5432:5432
    volumes:
      - ./persist/database:/var/lib/postgresql/data

  adminer:
    container_name: adminer-dev
    image: adminer
    ports:
      - 8080:8080
    depends_on:
      database:
        condition: service_healthy
